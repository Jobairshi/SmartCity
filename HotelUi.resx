<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="title.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>