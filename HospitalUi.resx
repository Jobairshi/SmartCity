<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="title.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5lJUu1WXLv8PBeq98LaqlXwAAAAASUVORK5CYII=
</value>
  </data>
</root>